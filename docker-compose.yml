# version: "3.3"
services:
  app:
    build:
      context: .
      args:
        - DEV=true
      dockerfile: Dockerfile
    restart: on-failure
    ports:
      - "8000:8000"
    volumes:
      - "./src/rag:/app/src/rag"
      - "./tests/rag:/app/tests/rag"
    command: >
      sh -c "
        python src/rag/dataaccess/migrations/elasticsearch/wait_for_elastic.py && \
        python src/rag/dataaccess/migrations/elasticsearch/migrate.py && \
        flake8 src/rag && \
        coverage run -m pytest tests/rag && \
        coverage report && \
        uvicorn src.rag.main:app --reload --port 8000 --host 0.0.0.0
      "
    environment:
      # System Env
      - PYTHONPATH=/app
      - API_KEY=$API_KEY
      - SECRET_KEY=$SECRET_KEY
      - ALGORITHM=$ALGORITHM
      - EXPIRE_DAYS=$EXPIRE_DAYS

      # Elastic Env
      - ELASTIC_HOST=elasticsearch
      - ELASTIC_PORT=$ELASTIC_PORT
      - ELASTIC_USERNAME=$ELASTIC_USERNAME
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD
      - ELASTIC_MAPPING_VERSION=$ELASTIC_MAPPING_VERSION
      - ELASTIC_VERIFY_CERTS=$ELASTIC_VERIFY_CERTS
      - ELASTIC_SCHEME_CONNNECTION=$ELASTIC_SCHEME_CONNNECTION

    depends_on:
      - elasticsearch

    networks:
      rag-dev:

  elasticsearch:
    image: elasticsearch:$ELASTIC_VERSION
    ports:
      - $ELASTIC_PORT:$ELASTIC_PORT
    environment:
      - discovery.type=single-node
      - xpack.security.http.ssl.enabled=false
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD
      - ES_JAVA_OPTS=-Xmx1g -Xms1g
    volumes:
      - elasticsearch-dev:/usr/share/elasticsearch/data
    networks:
      rag-dev:

volumes:
  elasticsearch-dev:

networks:
  rag-dev:
    external: true
